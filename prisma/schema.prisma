// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id         String     @id @default(uuid())
  name       String
  userId     String
  banners    Banner[]   @relation("StoreToBanner")
  categories Category[] @relation("StoreToCategory")
  sizes      Size[]     @relation("StoreToSize")
  colors     Color[]    @relation("StoreToColor")
  products   Product[]  @relation("StoreToProduct")
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Banner {
  id         String     @id @default(uuid())
  storeId    String
  store      Store      @relation("StoreToBanner", fields: [storeId], references: [id])
  categories Category[]
  label      String
  imageUrl   String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@index([storeId])
}

model Category {
  id        String    @id @default(uuid())
  name      String
  storeId   String
  store     Store     @relation("StoreToCategory", fields: [storeId], references: [id])
  bannerId  String
  banner    Banner    @relation(fields: [bannerId], references: [id])
  products  Product[] @relation("CategoryToProduct")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([storeId])
  @@index([bannerId])
}

model Size {
  id        String    @id @default(uuid())
  name      String
  value     String
  storeId   String
  store     Store     @relation("StoreToSize", fields: [storeId], references: [id])
  products  Product[] @relation("SizeToProduct")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([storeId])
}

model Color {
  id        String    @id @default(uuid())
  name      String
  value     String
  storeId   String
  store     Store     @relation("StoreToColor", fields: [storeId], references: [id])
  products  Product[] @relation("ColorToProduct")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([storeId])
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Decimal
  isFeatured  Boolean  @default(false)
  isArchived  Boolean  @default(false)
  storeId     String
  store       Store    @relation("StoreToProduct", fields: [storeId], references: [id])
  categoryId  String
  category    Category @relation("CategoryToProduct", fields: [categoryId], references: [id])
  sizeId      String
  size        Size     @relation("SizeToProduct", fields: [sizeId], references: [id])
  colorId     String
  color       Color    @relation("ColorToProduct", fields: [colorId], references: [id])
  images      Image[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([storeId])
  @@index([categoryId])
  @@index([sizeId])
  @@index([colorId])
}

model Image {
  id        String   @id @default(uuid())
  productId String
  products  Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
}
